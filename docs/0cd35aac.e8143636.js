(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{159:function(e,t,r){"use strict";r.d(t,"a",(function(){return s})),r.d(t,"b",(function(){return O}));var n=r(0),a=r.n(n);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function b(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?b(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):b(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var c=a.a.createContext({}),p=function(e){var t=a.a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},s=function(e){var t=p(e.components);return a.a.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,o=e.originalType,b=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),s=p(r),d=n,O=s["".concat(b,".").concat(d)]||s[d]||u[d]||o;return r?a.a.createElement(O,l(l({ref:t},c),{},{components:r})):a.a.createElement(O,l({ref:t},c))}));function O(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=r.length,b=new Array(o);b[0]=d;var l={};for(var i in t)hasOwnProperty.call(t,i)&&(l[i]=t[i]);l.originalType=e,l.mdxType="string"==typeof e?e:n,b[1]=l;for(var c=2;c<o;c++)b[c]=r[c];return a.a.createElement.apply(null,b)}return a.a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},66:function(e,t,r){"use strict";r.r(t),r.d(t,"frontMatter",(function(){return b})),r.d(t,"metadata",(function(){return l})),r.d(t,"rightToc",(function(){return i})),r.d(t,"default",(function(){return p}));var n=r(3),a=r(7),o=(r(0),r(159)),b={id:"arrow",title:"Arrow Generators",slug:"property-test-generators-arrow.html",sidebar_label:"Arrow Generators"},l={unversionedId:"proptest/arrow",id:"proptest/arrow",isDocsHomePage:!1,title:"Arrow Generators",description:"An optional module provides generators for Arrow. These generators are JVM only.",source:"@site/docs/proptest/arrow.md",slug:"/proptest/property-test-generators-arrow.html",permalink:"/docs/proptest/property-test-generators-arrow.html",editUrl:"https://github.com/kotest/kotest/blob/master/documentation/docs/proptest/arrow.md",version:"current",sidebar_label:"Arrow Generators",sidebar:"proptest",previous:{title:"Global Configuration",permalink:"/docs/proptest/property-test-global-config.html"}},i=[],c={rightToc:i};function p(e){var t=e.components,r=Object(a.a)(e,["components"]);return Object(o.b)("wrapper",Object(n.a)({},c,r,{components:t,mdxType:"MDXLayout"}),Object(o.b)("p",null,"An optional module provides generators for ",Object(o.b)("a",Object(n.a)({parentName:"p"},{href:"https://arrow-kt.io"}),"Arrow"),". These generators are JVM only."),Object(o.b)("p",null,"To use, add ",Object(o.b)("inlineCode",{parentName:"p"},"io.kotest.extensions:kotest-property-arrow:version")," to your build."),Object(o.b)("table",null,Object(o.b)("thead",{parentName:"table"},Object(o.b)("tr",{parentName:"thead"},Object(o.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Generator"),Object(o.b)("th",Object(n.a)({parentName:"tr"},{align:null}),"Description"))),Object(o.b)("tbody",{parentName:"table"},Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"td"},"Either")),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"Arb.either(arbL, arbR)")),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Generates approx 50/50 of left and right from the underlying generators")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"Arb.right(arb)")),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Generates instances of ","[Either.Right]"," using the given arb")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"Arb.left(arb)")),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Generates instances of ","[Either.Left]"," using the given arb")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"td"},"NonEmptyList")),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"Arb.nel(arb, range)")),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Generates NonEmptyList instances with a size randomly chosen from the given range (defaults to 1 to 100), with elements populated from the given arb.")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(o.b)("strong",{parentName:"td"},"Option")),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}))),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"Exhaustive.option(a)")),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Returns an Exhaustive that contains a None and a Some with the given value")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"Exhaustive.none(a)")),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Returns an Exhaustive that contains None")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"Arb.option(arb)")),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Generates both None and Some with Some's populated with values from the given arb")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"Arb.some(arb)")),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"Generates Some's populated with values from the given arb")),Object(o.b)("tr",{parentName:"tbody"},Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),Object(o.b)("inlineCode",{parentName:"td"},"Arb.none()")),Object(o.b)("td",Object(n.a)({parentName:"tr"},{align:null}),"A constant arb that returns None. Equivalent to Exhaustive.None and provided only for use when an Arb is required.")))))}p.isMDXComponent=!0}}]);